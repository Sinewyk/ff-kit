var Promise = require('bluebird');
var request = Promise.promisifyAll(require('request'));
var url = require('url');
var t = require('_i18n');

//load adapters ...
var adapters = {
    'www.fanfiction.net': require('./adapters/www.fanfiction.net.adapter')
};

module.exports = {
    download: function(_url) {
        //@todo: progress handling ? dunno how to do that, it's out of the Promises spec :o
        return new Promise(function(resolve, reject) {
            var domain = url.parse(_url).host;
            if (!adapters[domain]) throw new Error(t.gettext('Unsupported domain'));
            request.getAsync(_url)
            //share data for the end stuff
            .bind(this)
            .spread(adapters[domain].process)
            .catch(function(e) {
                reject(new Error(t.gettext('Failed checking the story')));
            })
            .then(function(infos) {
                this.infos = infos;
                //concurrently fetch all chapters, because I said so
                return Promise.all(infos.chapterLinks.map(function(link) {
                    return request.getAsync(link);
                }));
            }).then(function(all) {
                this.all = all;
                console.log('I just got everything here :o');
                console.log(this.infos);
                console.log(this.all);
                resolve(this.infos);
                //@todo: concatenate everything here ... and save as temp html
                //then convert, and proof of concept is here ^^
            }).catch(function(e) {
                debugger;
            })
        });
    },
    getAcceptedDomains: function() {
        return acceptedDomains;
    }
}
