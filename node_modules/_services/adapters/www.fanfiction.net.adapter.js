var Promise = require('bluebird');
//hack, I want the server side of jquery
//because I just want DOM uber parsing capabilities
//so, because not simple string, make browserify skip it
//and will be required from node-webkit
var $ = require('jqu' + 'ery');
var t = require('_i18n').t;

function convertTime(_xutime) {
    return _xutime * 1000;
}

function checkCorrectUrl(request) {
    if (!request.path.match(/s\/\d+\/\w+/)) throw new Error();
}

function process(response, body) {
    checkCorrectUrl(response.req);

    var regChapterLink = /(\/s\/\d+\/)\d+\/\w+/;

    var websiteName = 'www.fanfiction.net';
    var storyName = '';
    var authorName = '';
    var chaptersCount = 0;
    var lastUpdated = '';
    var published = '';
    var summary = '';
    var storyStatus = 'Unknown';
    var category = '';
    var genre = '';
    var rating = '';
    var storyLink = '';
    var authorLink = '';
    var totalWordCount = 0;
    var chapterNames = [];
    var chapterLinks = [];

    //html seems valid so ...
    var page = $(body);

    storyName = page.find('b.xcontrast_txt').html();
    authorName = page.find('a.xcontrast_txt[href^="/u/"]').html();
    storyLink = websiteName + response.req.path;
    chaptersCount = page.find('select#chap_select').first().children().length || 1;
    lastUpdated = convertTime(page.find('#profile_top span[data-xutime]').first().data('xutime'));
    published = convertTime(page.find('#profile_top span[data-xutime]').last().data('xutime'));
    summary = page.find('#profile_top > div').html();
    storyStatus = page.find('#profile_top span.xcontrast_txt').last().html().match(/Status: Complete/) ? t.gettext('Complete') : t.gettext('In progress');
    authorLink = websiteName + page.find('a.xcontrast_txt[href^="/u/"]').attr('href');

    var baseChapterLink = response.req.path.match(regChapterLink)[1];

    for (var i = 1; i <= chaptersCount; ++i) {
        chapterLinks.push((response.request.port === 443 ? 'https://' : 'http://') + websiteName + baseChapterLink + i);
    }

    page.find('select:first > option').each(function() {
        chapterNames.push($(this).html());
    });

    return {
        websiteName: websiteName,
        storyName: storyName,
        authorName: authorName,
        chaptersCount: chaptersCount,
        lastUpdated: lastUpdated,
        published: published,
        summary: summary,
        storyStatus: storyStatus,
        category: category,
        genre: genre,
        rating: rating,
        storyLink: storyLink,
        authorLink: authorLink,
        totalWordCount: totalWordCount,
        chapterNames: chapterNames,
        chapterLinks: chapterLinks
    };
}

function getFictionFromSource(source) {
    return $(source).find('#storytext').html();
}

module.exports = {
    process: process,
    getFictionFromSource: getFictionFromSource
}
